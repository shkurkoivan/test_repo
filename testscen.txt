Тестовые сценарии:
* GET /characters и /character?name
        * запрос коллекции пустой(если возможно)/ не пустой (/characters)
        * получение случайного персонажа с валидным именем из непустой коллекци (с односоставным и двусоставным именем) (/character?name)
        * получение персонажа с невалидным именем ("", "-12301", " ", "1111111111111111111"*100]) (/character?name)
        * получение персонажа без переданных данных для аутентификации (/characters и /character?name)

* POST /character
        * создание персонажа с валидными данными (все необходимые поля заполнены + использован верный тип для поля) +
            проверка, что персонаж создается в коллекции
        * создание персонажа с невалидными данными (не указать необходимые поля, либо использовать неверный тип для поля/либо существующее имя) +
            проверка, что персонаж не попадает в коллекцию
        * создание персонажа при заполненной максимум коллекции
        * создание персонажа без переданных данных для аутентификации

* PUT /character
        * редактирование персонажа из коллекции (валидные данные) + проверка, что персонаж отредактирован в коллекции
        * редактирование персонажа без изменения данных
        * редактирование персонажа с невалидными данными (не указать необходимые поля, либо использовать неверный тип для поля/либо существующее имя) +
            проверка, что персонаж измененные данные не попадают в коллекцию
        * редактирование персонажа без переданных данных для аутентификации

* DELETE /character
        * удаление случайного персонажа из коллекции
        * удаление с переданным невалидным параметром для имени
        * удаление персонажа без переданных данных для аутентификации

* POST /reset
        * Добавляем персонажа в коллекцию, сбрасываем коллекцию, проверяем, что количество элементов = минимальному
        * сброс коллекции без переданных данных для аутентификации
